{
  "id": "MCA-369",
  "parent_id": "MCA-368",
  "title": "Paginate node collection",
  "user_story": "As an API consumer\\\nWhen requesting a list of NODEs (e.g. Images)\\\nI want to fetch them in slices (instead of the whole collection at once)\\\nSo I don't have to wait for and parse a giant response object\n",
  "description": "The user should be able to restrict the amount of nodes that are returned in a collection. This is for performance reasons (loading thousands of nodes takes some time) and to make it easier for the user to work on the response objects.\n\n# Specification\n\n* The user can attach the parameter `page` to every “get all nodes of node type” request, e.g. `GET /brands?page=3`.\n* The page size is fixed (for now).\n  * Each page (apart from the last one) returns `100` items of the whole collection.\n  * The last page returns the remaining items (between `1` and `100`).\n  * If the whole collection has less than `100` items then all of them are returned.\n* Each page returns a different subset of the original collection. (Not strictly enforced at the moment, but in a later iteration. See scope & limits.)\n* When a valid page number was provided then the response returns with code `200`.\n  * Out-of-range numbers are deemed valid, e.g. when page `10` is requested, but there are only `8` available. An empty list is returned in this case.\n  * This is also true, when the collection is completely empty (edge case).\n* Page `1` is always deemed a valid page number, no matter how large, small or empty the collection is.\n* Page `0` and negative page numbers are always invalid. Request will be rejected with a `400` error.\n  * The same is true for all values that are not of type “number” (e.g. `page=three`).\n* The data structure of the returned node collection does not change in any way or form.\n\n# Scope & Limits\n\n* The page size is static for now. Making it configurable comes later.\n* The collections don’t need to be explicitly sorted. The database can decides the order. This might lead to duplicate (and missing) nodes across multiple pages. But, this will be tackled in a different ticket.\n* Meta information is not returned in this iteration (page size, page number, next page, etc.)\n",
  "api_verb": "GET",
  "api_path": "?page=<page>",
  "response_options": [
    "200",
    "400"
  ],
  "release_versions": [
    "0.21.0"
  ],
  "created_at": "2025-08-18T15:19:55.867+0200",
  "updated_at": "2025-10-08T15:44:43.624+0200"
}
