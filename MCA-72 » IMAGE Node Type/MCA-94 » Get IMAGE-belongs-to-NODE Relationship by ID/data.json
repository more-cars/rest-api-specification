{
  "id": "MCA-94",
  "parent_id": "MCA-72",
  "title": "Get IMAGE-belongs-to-NODE Relationship by ID",
  "user_story": "As an API contributor\\\nWhen I find an IMAGE that would be a good candidate to illustrate a specific node\\\nI want to know if both nodes are already connected to each other\n",
  "description": "# **Response**\n\n**Happy path**\n\n* positive HTTP status code (200)\n* a JSON containing the relationship data:\n  * `image_id`: integer\n  * `partner_node_id`: integer\n  * `partner_node_type`: string\n  * `relationship_id`: integer\n  * `relationship_name`: string\n\n**Unhappy path**\n\n* negative HTTP status code (404)\n* a plain text response stating the problem\n\n# **Acceptance Criteria**\n\n**Behavior (Business Logic)**\n\n* the relationship is successfully retrieved when provided with valid data\n  * status code `200`\n* the relationship retrieval fails when the provided data was not valid\n  * `404` when `image` and/or `partner_node` were not found\n  * `404` when the expected relationship doesn't exists between both nodes\n  * `422` when `image` and `partner_node` are the same\n\n# **Quality Gates**\n\n* Unit+Integration tests (Jest) are extended (100% coverage)\n* Behavior tests (Cucumber) are added (100% coverage)\n* OpenAPI spec is extended\n  * schema is still valid\n* Bruno collection is extended\n* Performance tests are extended\n  * existing tests are still green\n\n# **NOT in scope for this iteration**\n\n* proper JSON structure according to the JSON:API\n",
  "api_verb": "GET",
  "api_path": "/images/<image-id>/belongs-to-node/<partner-node-id>",
  "response_options": [
    "200",
    "404",
    "422"
  ],
  "release_versions": [
    "0.9.0"
  ],
  "created_at": "2025-05-20T08:58:44.100+0200",
  "updated_at": "2025-08-21T14:10:58.513+0200"
}
