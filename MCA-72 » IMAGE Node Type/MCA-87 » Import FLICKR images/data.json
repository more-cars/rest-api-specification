{
  "id": "MCA-87",
  "parent_id": "MCA-72",
  "title": "Import FLICKR images",
  "user_story": "As an API contributor\\\nI want to import FLICKR images via their ID\\\nSo I don't have to fill out all fields manually\n",
  "description": "# **Request**\n\n* method: `POST`\n* URL path: `/images`&#x20;\n* properties:\n  * `image_provider`: string “flickr“, mandatory\n  * `external_id`: string, mandatory\n\n# **Response**\n\n**Happy path**\n\n* positive HTTP status code (201)\n* a JSON with the meta information, the user data and the imported data:\n  * `id`: integer\n  * `external_id`: string\n  * `image_provider`: string “flickr“\n  * `name`: string\n  * `description`: string/null\n  * `creator`: string\n  * `license`: string\n  * `tags`: string/null\n  * `source`: string\n  * `image_url_original`: string\n  * `image_url_xxl`: string/null\n  * `image_url_xl`: string/null\n  * `image_url_l`: string/null\n  * `image_url_m`: string/null\n  * `image_url_s`: string/null\n  * `image_url_xs`: string/null\n  * `created_at`: string\n  * `updated_at`: string\n\n**Unhappy path**\n\n* negative HTTP status code (400, 422)\n* a plain text response stating the problem\n\n# **Acceptance Criteria**\n\n**Behavior (Business Logic)**\n\n* the node is successfully created when provided with valid data&#x20;\n* when the request is malformed then code 400 is returned (incl. error message in plain text) → already covered by <https://dennis-gerike.atlassian.net/browse/MCA-75>\n  <!-- media: file a4b21c53-1cda-4356-a1d3-09e0e0786dc7 -->\n  * when mandatory fields are missing\n  * when wrong data types were submitted\n* when a flickr image with the given ID could not be found → 422\n* unknown properties are ignored (no error, no warning) → already covered by <https://dennis-gerike.atlassian.net/browse/MCA-75>&#x20;\n* the nodes are filled with the data returned from the flickr API\n  * empty values are returned as `null`\n\n# **Quality Gates**\n\n* Unit+Integration tests (Jest) are extended (100% coverage)\n* Behavior tests (Cucumber) are added (100% coverage)\n* OpenAPI spec is extended\n  * schema is still valid\n* Bruno collection is extended\n* Performance tests are extended\n  * tests are still green\n\n# **NOT in scope for this iteration**\n\n* full validation\n* bulk create\n* versioning information\n* auth / security\n* proper JSON structure according to the JSON:API\n",
  "api_verb": null,
  "api_path": null,
  "response_options": [],
  "release_versions": [],
  "created_at": "2025-05-19T15:13:34.421+0200",
  "updated_at": "2025-08-22T15:49:58.413+0200"
}
